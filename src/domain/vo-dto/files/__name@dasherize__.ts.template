import { always, Is, ValueObject } from '@opi_pib/ts-utility';

import { <%= classify(name) %>Props } from './<%= dasherize(name) %>-props';
import { is<%= classify(name) %>Props } from './is-<%= dasherize(name) %>-props';

export class <%= classify(name) %> extends ValueObject<<%= classify(name) %>Props> {
	constructor(protected override readonly props: <%= classify(name) %>Props) {
		super(props);
	}

	static create(props: <%= classify(name) %>Props): <%= classify(name) %> {
		always(is<%= classify(name) %>Props(props), '');

		return new <%= classify(name) %>(props);
	}

	static fromDto(dto: <%= dto %>) {
		return this.create({
		<% for (const prop of properties) { %>
			<%- prop.name.replace(/^['"]|['"]$/g, '') %>: <%- prop.typeConstructor.replace(/^['"]|['"]$/g, '') %>,
		<% } %>
		});
	}

<% for (const prop of properties) { %>
	get <%- prop.name.replace(/^['"]|['"]$/g, '') %>() {
		return this.props.<%- prop.name.replace(/^['"]|['"]$/g, '') %>;
	}
<% } %>
}
